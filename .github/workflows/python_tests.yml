name: python_tests
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
    paths-ignore:
      - '.github/workflows/javascript_tests.yml'
      - 'vendor/js/**'
      - 'package*.json'
      - '**.js'
      - '**.vue'
      - '**.less'
      - '**.css'
permissions:
  contents: read

jobs:
  python_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-python@v5
        with:
          python-version-file: pyproject.toml
      - uses: actions/cache@v4
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-venv-${{ env.pythonLocation }}-${{ hashFiles('requirements*.txt') }}
      - if: "contains(matrix.python-version, '-dev')"
        run: |
          sudo apt-get update
          # https://lxml.de/installation.html#requirements
          sudo apt-get install -y libxml2 libxslt-dev
      - name: Check if pip is broken and reinstall if needed
        run: |
          set -e
          # Try to upgrade pip, setuptools, and wheel
          python -m pip install --upgrade pip setuptools wheel || {
            # Try to get current versions of pip, setuptools, and wheel
            PIP_VERSION=$(pip freeze | grep '^pip==' | cut -d'=' -f3 || echo "")
            SETUPTOOLS_VERSION=$(pip freeze | grep '^setuptools==' | cut -d'=' -f3 || echo "")
            WHEEL_VERSION=$(pip freeze | grep '^wheel==' | cut -d'=' -f3 || echo "")

            # If pip is broken or missing, reinstall using the found versions (if available)
            if [[ -z "$PIP_VERSION" || -z "$SETUPTOOLS_VERSION" || -z "$WHEEL_VERSION" ]]; then
              echo "pip is broken or missing, reinstalling..."
              curl -sS https://bootstrap.pypa.io/get-pip.py -o get-pip.py
              python get-pip.py "$PIP_VERSION" "$SETUPTOOLS_VERSION" "$WHEEL_VERSION"
              rm -f get-pip.py
            fi
          }
      - name: Install dependencies
        run: |
          pip install --upgrade pip setuptools wheel
          pip install -r requirements_test.txt
          pip list --outdated
      - run: make git
      - name: Run make i18n
        run: |
          make i18n
          make test-i18n
      - name: Run tests
        run: |
          git fetch --no-tags --prune --depth=1 origin master
          make test-py
          source scripts/run_doctests.sh
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
