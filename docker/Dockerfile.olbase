FROM python:3.12.2-slim-bookworm

ENV LANG=en_US.UTF-8

# required for postgres
ENV LC_ALL=POSIX

# Create openlibrary users
# We use 999:999 for the openlibrary user. Any volume mounts which require read/write
# access by the container should be set to this user. Ideally we would use a number
# larger than 10,000 to avoid host OS uid/gid conflicts, but this is what we have
# at the moment.
RUN groupadd --system --gid 999 openlibrary \
  && useradd --no-log-init --system -u 999 --gid openlibrary --create-home openlibrary

# Misc OL dependencies
RUN apt-get -qq update && apt-get install -y \
    postgresql-client \
    build-essential \
    git \
    libpq-dev \
    libxml2-dev \
    libxslt-dev \
    libffi-dev \
    curl \
    screen \
# Editors (for our convenience)
    vim \
    emacs \
# util for running things in parallel
    parallel \
# automatic import pipeline dependencies
    zip \
    unzip \
    lftp

# Install LTS version of node.js
COPY scripts/install_nodejs.sh ./
RUN ./install_nodejs.sh && rm ./install_nodejs.sh

# Install nginx
USER root
COPY scripts/install_nginx.sh ./
RUN ./install_nginx.sh && rm ./install_nginx.sh

RUN mkdir -p /var/log/openlibrary /var/lib/openlibrary && chown openlibrary:openlibrary /var/log/openlibrary /var/lib/openlibrary \
 && mkdir /openlibrary && chown openlibrary:openlibrary /openlibrary \
 && mkdir -p /var/lib/coverstore && chown openlibrary:openlibrary /var/lib/coverstore \
 # In order to write to solr-updater's named volume, this needs to be
 # pre-created with the right permissions
 && mkdir -p /solr-updater-data && chown openlibrary:openlibrary /solr-updater-data
WORKDIR /openlibrary

USER openlibrary
COPY --chown=openlibrary:openlibrary requirements*.txt ./
COPY --from=ghcr.io/astral-sh/uv:latest /uv /uvx /bin/
# This is needed so we install packages into the system python instead of needing venv
ENV UV_SYSTEM_PYTHON=1
USER root
RUN uv pip install --upgrade wheel
RUN uv pip install -r requirements.txt

USER openlibrary

COPY --chown=openlibrary:openlibrary package*.json ./
RUN npm ci --no-audit

COPY --chown=openlibrary:openlibrary . /openlibrary
# run make to initialize git submodules, build css and js files
RUN ln -s vendor/infogami/infogami infogami \
 && make \
 && uv pip list --outdated
